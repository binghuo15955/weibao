<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.yt.mapper.CollectMapper">
  <resultMap id="BaseResultMap" type="com.yt.entity.Collect">
    <id column="id" jdbcType="INTEGER" property="id" />
    <result column="uid" jdbcType="INTEGER" property="uid" />
    <result column="pid" jdbcType="INTEGER" property="pid" />
  </resultMap>
  <resultMap id="BaseResultMapWithProductandPics" type="com.yt.entity.Collect">
    <id column="id" jdbcType="INTEGER" property="id" />
    <result column="uid" jdbcType="INTEGER" property="uid" />
    <result column="pid" jdbcType="INTEGER" property="pid" />
    <association property="pictures" javaType="Picture">
    	<result property="picurl" column="picurl" />
    </association>
    <association property="products" javaType="Product">
    	<result property="current_price" column="current_price" />
    	<result property="name" column="name" />
    	<result property="uid" column="seller_id" />
    </association>
  </resultMap>
  <sql id="Base_Column_List">
    id, uid, pid
  </sql>
  <sql id="Base_Column_ListWithProductsandPics">
    collect.id, collect.uid, collect.pid,picture.picurl picurl,product.current_price current_price,product.name name,product.uid seller_id
  </sql>
  <select id="selectByUid_Pid" resultMap="BaseResultMap">
  	select * from collect where uid=${uid} and pid=${pid}
  </select>
    <insert id="insertDistrict" parameterType="com.yt.entity.Collect">
    insert into collect
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="uid != null">
        uid,
      </if>
      <if test="pid != null">
        pid,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=INTEGER},
      </if>
      <if test="uid != null">
        #{uid,jdbcType=INTEGER},
      </if>
      <if test="pid != null">
        #{pid,jdbcType=INTEGER},
      </if>
    </trim>
    on duplicate key update uid=${uid},pid=${pid}
  </insert>
  	<select id="countByUid" resultType="Integer">
		select
		count(*)
		from collect
		where uid=${uid}
	</select>
	<select id="selectByUid" resultMap="BaseResultMapWithProductandPics">
		select
		<include refid="Base_Column_ListWithProductsandPics" />
		from (collect left join product on collect.pid=product.id) left join picture on collect.pid=picture.pid 
		where collect.uid=${uid}
		 group by collect.id
		order by collect.id desc
		limit ${page},${limit}
	</select> 
  <delete id="deleteByUid_Pid" parameterType="java.lang.Integer">
  	delete from collect
  	where uid=${uid} and pid=${pid}
  </delete>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from collect
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from collect
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="com.yt.entity.Collect">
    insert into collect (id, uid, pid)
    values (#{id,jdbcType=INTEGER}, #{uid,jdbcType=INTEGER}, #{pid,jdbcType=INTEGER})
  </insert>
  <insert id="insertSelective" parameterType="com.yt.entity.Collect">
    insert into collect
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="uid != null">
        uid,
      </if>
      <if test="pid != null">
        pid,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=INTEGER},
      </if>
      <if test="uid != null">
        #{uid,jdbcType=INTEGER},
      </if>
      <if test="pid != null">
        #{pid,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.yt.entity.Collect">
    update collect
    <set>
      <if test="uid != null">
        uid = #{uid,jdbcType=INTEGER},
      </if>
      <if test="pid != null">
        pid = #{pid,jdbcType=INTEGER},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.yt.entity.Collect">
    update collect
    set uid = #{uid,jdbcType=INTEGER},
      pid = #{pid,jdbcType=INTEGER}
    where id = #{id,jdbcType=INTEGER}
  </update>
</mapper>